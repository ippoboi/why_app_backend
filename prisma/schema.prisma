datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  userId              String           @id @default(uuid())
  email               String           @unique
  username            String           @unique
  password            String
  occupation          String?          @default("")
  createdAt           DateTime         @default(now())
  updatedAt           DateTime         @updatedAt
  whyStatements       WhyStatement[]   
  savedQuotes         SavedQuote[]     
  favoritePersonalities Personality[]
  fistBumps          FistBump[]
  notifyHour         Int              @default(8) 
  verified           Boolean          @default(false)

  @@index([userId])
}

model WhyStatement {
  whyStatementId          String      @id @default(uuid())
  order       Int
  importance  Importance
  content     String
  isActive    Boolean     @default(true)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  user        User        @relation(fields: [userId], references: [userId], onDelete: Cascade)
  userId      String

  @@index([userId])
}

model SavedQuote {
  savedQuoteId          String    @id @default(uuid())
  title       String    
  content     String    
  savedAt     DateTime  @default(now())
  user        User      @relation(fields: [userId], references: [userId], onDelete: Cascade)
  userId      String

  @@index([userId])
}

model Personality {
  personalityId          String    @id @default(uuid())
  name        String
  users       User[]
}

model FistBump {
  fistBumpId          String    @id @default(uuid())
  date        DateTime  @default(now())
  mood        Mood
  note        String
  user        User      @relation(fields: [userId], references: [userId], onDelete: Cascade)
  userId      String

  @@index([userId])
}

enum Mood {
  VERY_GOOD
  GOOD
  OK
  BAD
  VERY_BAD
}

enum Importance {
  GOAL
  HIGH
  MEDIUM
  SMALL
}
