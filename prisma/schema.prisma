datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  userId              Int              @id @default(autoincrement())
  email               String           @unique
  username            String           @unique
  password            String
  occupation          Occupation       @default(OTHER)
  createdAt           DateTime         @default(now())
  whyStatements       WhyStatement[]   
  savedQuotes         SavedQuote[]     
  favoritePersonalities Personality[]
  fistBumps          FistBump[]
  notifyHour         Int              @default(8) 
  verified           Boolean          @default(false)
  tempCodes          TempCode?

  @@index([userId])
}

model WhyStatement {
  whyStatementId          String      @id @default(uuid())
  order       Int
  importance  Importance
  content     String
  isActive    Boolean     @default(true)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  user        User        @relation(fields: [userId], references: [userId], onDelete: Cascade)
  userId      Int

  @@index([userId])
}

model SavedQuote {
  savedQuoteId          String    @id @default(uuid())
  title       String    
  content     String    
  savedAt     DateTime  @default(now())
  user        User      @relation(fields: [userId], references: [userId], onDelete: Cascade)
  userId      Int

  @@index([userId])
}

model Personality {
  personalityId          String    @id @default(uuid())
  name        String
  users       User[]
}

model FistBump {
  fistBumpId          String    @id @default(uuid())
  date        DateTime  @default(now())
  mood        Mood
  note        String
  user        User      @relation(fields: [userId], references: [userId], onDelete: Cascade)
  userId      Int

  @@index([userId])
}

model TempCode {
  codeId      Int    @id @default(autoincrement())
  code        String    @db.VarChar
  createdAt   DateTime  @default(now())
  expiresAt   DateTime 
  user        User      @relation(fields: [userId], references: [userId], onDelete: Cascade)
  userId      Int       @unique

  @@index([userId])
}

enum Mood {
  VERY_GOOD
  GOOD
  OK
  BAD
  VERY_BAD
}

enum Importance {
  GOAL
  HIGH
  MEDIUM
  SMALL
}

enum Occupation {
  // Healthcare
  PHYSICIAN
  NURSE
  DENTIST
  PHARMACIST
  PHYSICAL_THERAPIST

  // Technology
  SOFTWARE_ENGINEER
  DATA_SCIENTIST
  SYSTEM_ADMINISTRATOR
  NETWORK_ENGINEER
  UX_DESIGNER

  // Education
  TEACHER
  PROFESSOR
  EDUCATIONAL_CONSULTANT
  LIBRARIAN
  SCHOOL_ADMINISTRATOR

  // Business & Finance
  ACCOUNTANT
  FINANCIAL_ANALYST
  BUSINESS_CONSULTANT
  MARKETING_MANAGER
  HUMAN_RESOURCES_MANAGER

  // Legal
  LAWYER
  PARALEGAL
  LEGAL_CONSULTANT
  JUDGE

  // Creative & Media
  GRAPHIC_DESIGNER
  WRITER
  JOURNALIST
  PHOTOGRAPHER
  ARTIST

  // Trade & Construction
  ELECTRICIAN
  PLUMBER
  CARPENTER
  CONSTRUCTION_MANAGER
  MECHANIC

  // Service Industry
  CHEF
  HOSPITALITY_MANAGER
  RETAIL_MANAGER
  CUSTOMER_SERVICE_REPRESENTATIVE
  SALES_REPRESENTATIVE

  // Science & Research
  SCIENTIST
  RESEARCHER
  LABORATORY_TECHNICIAN
  ENVIRONMENTAL_SCIENTIST

  // Government & Public Service
  POLICE_OFFICER
  FIREFIGHTER
  SOCIAL_WORKER
  URBAN_PLANNER
  PUBLIC_ADMINISTRATOR

  // Transportation
  PILOT
  TRUCK_DRIVER
  LOGISTICS_COORDINATOR
  SHIP_CAPTAIN

  // Agriculture
  FARMER
  AGRICULTURAL_CONSULTANT
  VETERINARIAN

  // Other
  SELF_EMPLOYED
  RETIRED
  STUDENT
  OTHER
}
